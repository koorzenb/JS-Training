/*
    This css is for the test-component custom element.
    We don't want any of this to affect other styles.
    You can use shadow dom to prevent style issues but it becomes very difficult to make some changes when you do want that flexibility.
    By prefixing the style query with the component name we are simulating namespaces where these styles will not affect other UI
    but it is still able to change from the outside if you have system styles that you want to bleed in.
    A example of that would perhaps be button styles.

    To simplify sizing of certain parts we use css grid to define layout.
    Another important part to note here is the use of css variables.
    Should you decide to run a style like this in shadowdom one way affect change is by altering variables from the outside.
 */

test-component {
    --c-heading: cornflowerblue;
    --c-secondary: #dadada;

    display: block;
    width: 20rem;
    height: 20rem;

    border: var(--c-secondary) solid 1px;
    border-radius: 5px;
}

test-component section {
    display: grid;
    width: 100%;
    height: 100%;
    grid-template-rows: auto 1fr;
}

test-component h1 {
    color: var(--c-heading);
    border-bottom: var(--c-secondary) solid 1px;
    margin: 0;
}

test-component h1, test-component .content {
    padding: 1rem;
}

test-component > section > div {
    display: grid;
    grid-template-rows: 1fr 3rem;
}

test-component .toolbar {
    background: var(--c-secondary);
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-end;
    padding-right: 1rem;
}

test-component button {
    cursor: pointer;
}